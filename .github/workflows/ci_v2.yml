name: Component v2 CI/CD

# Controls when the action will run. 
on:
  push:
     paths:
       - 'docker-images/**'
       - '.github/workflows/ci_v2.yml'
       
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  check-standalone-container-updated:
    name: Check standalone docker containers are updated
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.filter.outputs.changes }}
      is_none_of_updates: ${{ steps.check.outputs.is_none_of_updates }}
    steps:
      - uses: actions/checkout@v2

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            mfa-align:
              - 'docker-images/standalone/mfa-align/**'

      - name: Check updated component is empty
        id: check
        env:
          UPDATED: ${{ steps.filter.outputs.changes }}
        run: |
          echo UPDATED: $UPDATED
          if [ "[]" == "$UPDATED" ]; then echo "::set-output name=is_none_of_updates::true"
          else echo "::set-output name=is_none_of_updates::false"
          fi

  check-base-container-updated:
    name: Check base docker containers are updated
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.filter.outputs.changes }}
      is_none_of_updates: ${{ steps.check.outputs.is_none_of_updates }}
    steps:
      - uses: actions/checkout@v2

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            runtime-base:
              - 'docker-images/base/runtime-base/**'

      - name: Check updated component is empty
        id: check
        env:
          UPDATED: ${{ steps.filter.outputs.changes }}
        run: |
          echo UPDATED: $UPDATED
          if [ "[]" == "$UPDATED" ]; then echo "::set-output name=is_none_of_updates::true"
          else echo "::set-output name=is_none_of_updates::false"
          fi

  check-depended-container-updated:
    name: Check depended docker containers are updated
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.filter.outputs.changes }}
      is_none_of_updates: ${{ steps.check.outputs.is_none_of_updates }}
    steps:
      - uses: actions/checkout@v2

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            evaluate:
              - 'docker-images/depended/evaluate/**'
            export-model:
              - 'docker-images/depended/expot-model/**'
            prepare-align:
              - 'docker-images/depended/prepare-align/**'
            preprocess:
              - 'docker-images/depended/preprocess/**'
            torchserve:
              - 'docker-images/depended/torchserve/**'
            train:
              - 'docker-images/depended/train/**'

      - name: Check updated component is empty
        id: check
        env:
          UPDATED: ${{ steps.filter.outputs.changes }}
        run: |
          echo UPDATED: $UPDATED
          if [ "[]" == "$UPDATED" ]; then echo "::set-output name=is_none_of_updates::true"
          else echo "::set-output name=is_none_of_updates::false"
          fi

  build-push-standalone-containers:
    name: Build and push standalone docker images
    runs-on: ubuntu-latest

    needs: check-standalone-container-updated
    if: ${{ needs.check-standalone-container-updated.outputs.is_none_of_updates == 'false' }}
    strategy:
      matrix:
        package: ${{ fromJSON(needs.check-standalone-container-updated.outputs.images) }}

    env:
      IMAGE_PREFIX: fs2

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository
      - uses: actions/checkout@v2

      # setup docker environment
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # build and push the component image
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./components/${{ matrix.package }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_PREFIX }}-${{ matrix.package }}:latest


  build-push-base-containers:
    name: Build and push base docker images
    runs-on: ubuntu-latest

    needs: check-base-container-updated
    if: ${{ needs.check-base-container-updated.outputs.is_none_of_updates == 'false' }}
    strategy:
      matrix:
        package: ${{ fromJSON(needs.check-base-container-updated.outputs.images) }}

    env:
      IMAGE_PREFIX: fs2

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository
      - uses: actions/checkout@v2

      # setup docker environment
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # build and push the component image
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./components/${{ matrix.package }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_PREFIX }}-${{ matrix.package }}:latest


  build-push-depended-containers:
    name: Build and push depended docker images
    runs-on: ubuntu-latest

    needs: 
      - build-push-base-containers
      - check-depended-container-updated
    if: ${{ needs.check-depended-container-updated.outputs.is_none_of_updates == 'false' }}
    strategy:
      matrix:
        package: ${{ fromJSON(needs.check-depended-container-updated.outputs.images) }}

    env:
      IMAGE_PREFIX: fs2

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository
      - uses: actions/checkout@v2

      # setup docker environment
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # build and push the component image
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./components/${{ matrix.package }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_PREFIX }}-${{ matrix.package }}:latest
